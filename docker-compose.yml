version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aras_auth_postgres
    environment:
      POSTGRES_DB: aras_auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aras_auth_network

  aras_auth:
    build: .
    container_name: aras_auth_service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Server Configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
      
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: aras_auth
      DB_SSL_MODE: disable
      
      # JWT Configuration
      JWT_SECRET_KEY: your-secret-key-change-in-production
      JWT_ACCESS_EXPIRY: 15m
      JWT_REFRESH_EXPIRY: 7d
      
      # Admin Configuration
      ADMIN_EMAIL: admin@aras-services.com
      ADMIN_PASSWORD: admin123
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aras_auth_network

  migration:
    build: .
    container_name: aras_auth_migration
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: aras_auth
      DB_SSL_MODE: disable
    command: ["./main", "migrate", "up"]
    volumes:
      - ./migrations:/app/migrations:ro
    networks:
      - aras_auth_network

volumes:
  postgres_data:
    driver: local

networks:
  aras_auth_network:
    driver: bridge


