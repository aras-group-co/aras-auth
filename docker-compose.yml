version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: aras_auth_postgres
    environment:
      POSTGRES_DB: your_database_name
      POSTGRES_USER: your_database_username
      POSTGRES_PASSWORD: your_database_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U your_database_username"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aras_auth_network

  aras_auth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_VERSION: ${BUILD_VERSION}
        BUILD_TIME: ${BUILD_TIME}
        GIT_COMMIT: ${GIT_COMMIT}
    image: ghcr.io/aras-group-co/aras-auth:${ARAS_AUTH_VERSION:-v1.1.0}
    container_name: aras_auth_service
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Server Configuration
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 7600
      
      # Database Configuration
      DB_HOST: your_database_host
      DB_PORT: 5432
      DB_USER: your_database_username
      DB_PASSWORD: your_database_password
      DB_NAME: your_database_name
      DB_SSL_MODE: disable
      
      # JWT Configuration
      JWT_SECRET_KEY: your_jwt_secret_key
      JWT_ACCESS_EXPIRY: 15m
      JWT_REFRESH_EXPIRY: 7d
      
      # Admin Configuration
      ADMIN_EMAIL: your_admin_email
      ADMIN_PASSWORD: your_admin_password
    ports:
      - "7600:7600"
    volumes:
      - ./config:/app/config:ro
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7600/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - aras_auth_network

  migration:
    build: .
    container_name: aras_auth_migration
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: your_database_host
      DB_PORT: 5432
      DB_USER: your_database_username
      DB_PASSWORD: your_database_password
      DB_NAME: your_database_name
      DB_SSL_MODE: disable
    command: ["./aras-auth", "migrate", "up"]
    volumes:
      - ./migrations:/app/migrations:ro
    networks:
      - aras_auth_network

volumes:
  postgres_data:
    driver: local

networks:
  aras_auth_network:
    driver: bridge


